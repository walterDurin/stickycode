<?xml version="1.0" encoding="UTF-8"?>
	<!--
		/** * Copyright (c) 2010 RedEngine Ltd, http://www.redengine.co.nz. All rights reserved. * * This program is licensed to you under
		the Apache License Version 2.0, * and you may not use this file except in compliance with the Apache License Version 2.0. * You
		may obtain a copy of the Apache License Version 2.0 at http://www.apache.org/licenses/LICENSE-2.0. * * Unless required by
		applicable law or agreed to in writing, * software distributed under the Apache License Version 2.0 is distributed on an * "AS IS"
		BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the Apache License Version 2.0 for the
		specific language governing permissions and limitations there under. */
	-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<artifactId>sticky-root</artifactId>
		<groupId>net.stickycode.parent</groupId>
		<version>1.2</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.stickycode.parent</groupId>
	<artifactId>sticky-jar</artifactId>
	<version>1.3-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>sticky-jar</name>
	<description>The plugin definitions for jar projects</description>
	<inceptionYear>2010</inceptionYear>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<failIfNoTests>false</failIfNoTests>
						<includes>
							<include>**/*Test.java</include>
							<include>**/*Tests.java</include>
						</includes>
						<excludes>
							<exclude>**/*$*</exclude>
							<exclude>**/*IntegrationTest.java</exclude>
							<exclude>**/*IntegrationTests.java</exclude>
							<exclude>**/*FunctionalTest.java</exclude>
							<exclude>**/*FunctionalTests.java</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>run-integration-tests</id>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<includes>
									<include>**/*IntegrationTest.java</include>
									<include>**/*IntegrationTests.java</include>
								</includes>
								<excludes>
									<exclude>**/*$*</exclude><!-- Exclude inner classes -->
								</excludes>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<includes>
							<include>**/*FunctionalTest.java</include>
							<include>**/*IntegrationTest.java</include>
						</includes>
					</configuration>

					<executions>
						<execution>
							<id>run-functional-tests</id>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>verify-functional-tests</id>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.5</version>
					<executions>
						<execution>
							<id>attach-artifacts</id>
							<phase>package</phase>
							<goals>
								<goal>attach-artifact</goal>
							</goals>
							<configuration>
								<artifacts>
									<artifact>
										<file>${project.build.outputDirectory}/META-INF/maven/${project.groupId}/${project.artifactId}/dependency.tree</file>
										<type>tree</type>
										<classifier>dependency</classifier>
									</artifact>
									<artifact>
										<file>${project.build.outputDirectory}/META-INF/maven/${project.groupId}/${project.artifactId}/dependency.list</file>
										<type>list</type>
										<classifier>dependency</classifier>
									</artifact>
								</artifacts>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--
					Write out the dependency tree and list to the jar when we build such that we can see the point in time state of the
					dependencies. Ideally we would have slighty more determinable dependencies but that would trade off flexibility
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>generate-dep-list</id>
							<!--
								Although these could be considered generated resources they are not used within the project they only make sense in the
								final package, hence package phase.
							-->
							<!--
							And you don't want to regenerate these files for every goal called
						-->
							<phase>prepare-package</phase>
							<goals>
								<goal>list</goal>
							</goals>
							<configuration>
								<outputFile>${project.build.outputDirectory}/META-INF/maven/${project.groupId}/${project.artifactId}/dependency.list</outputFile>
							</configuration>
						</execution>
						<execution>
							<id>generate-dep-tree</id>
							<!--
								Although these could be considered generated resources they are not used within the project they only make sense in the
								final package, hence package phase.
							-->
							<!--
							And you don't want to regenerate these files for every goal called
						-->
							<phase>prepare-package</phase>
							<goals>
								<goal>tree</goal>
							</goals>
							<configuration>
								<outputFile>${project.build.outputDirectory}/META-INF/maven/${project.groupId}/${project.artifactId}/dependency.tree</outputFile>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
		</plugins>

	</build>
</project>
